@model NatisTracker.ViewModels.NatisDataViewModel

<!DOCTYPE html>
@{
    ViewBag.Title = "Collect";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Collect &middot; FindMy Natis</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <style type="text/css">
        .container {
            height: 100%;
            padding: 5px 5px 5px 5px;
            margin-left: 1%;
            margin-right: 1%;
            width: 98%;
        }

        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }

    </style>

</head>

<body>

    <h3>Please Scan Natis</h3>

    <div class="container">
        <div class="tab-content">
            <div id="Scan" class="tab-pane fade in active">

                @using (Html.BeginForm("Scan_To_Collect", "Process", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    if (Model == null)
                    {
                        <h3>Barcode not clearly captured or Natis already in the Safe, please try again</h3>
                    }

                    else if (Model.engineNo != null)
                    {
                        <div class="table-responsive table table-striped">
                            <table class="table">
                                <thead style="color:black; background-color:white">
                                    <tr>
                                        <th>Contracts Number</th>
                                        <th>VIN Number</th>
                                        <th>Registration Number</th>
                                        <th>Engine Number</th>
                                        <th>Car Make</th>
                                        <th>Series Number</th>
                                        <th>Description</th>
                                        <th>Registration Date</th>
                                        <th>Owner name</th>
                                        <th>Owner ID</th>
                                        <th>Natis Location</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td>@Model.contractNo</td>
                                        <td>@Model.vin</td>
                                        <td>@Model.registrationNo</td>
                                        <td>@Model.engineNo</td>
                                        <td>@Model.carMake</td>
                                        <td>@Model.seriesNo</td>
                                        <td>@Model.description</td>
                                        <td>@Model.registrationDate</td>
                                        <td>@Model.OwnerName</td>
                                        <td>@Model.OwnerID</td>
                                        <td>@Model.natisLocation</td>
                                    </tr>
                                </tbody>

                            </table>
                        </div>
                    }


                    <br /><br />
                    @Html.TextAreaFor(model => model.ScannedString, new { @class = "barcodeinput", @id = "ScannerInput", @cols = 50, @rows = 5 })
                    <br /><br>

                    <h3 id="msg" />

                    <button align="left" class="btn btn-large btn-primary nextcontrol" type="submit">Process Results</button>
                    <p align="right">

                        @Html.ActionLink("Back to previous page", "AdminView", "Users", null, null)
                    </p>
                }


            </div>
        </div>

    </div>

    <script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            var scannerInput = $("#ScannerInput");
            scannerInput.blur();
            var inputLength = 0;
            var elapsed = 0;

            scannerInput.keydown(function (ev) {
                //start = new Date().getTime();
                //elapsed = elapsed + start;
                //inputLength++;
                //var inputType = "";

                //if (inputLength === 2 && elapsed > 3074711694840) {
                //    //debugger;
                //    inputType = "keyboard";
                //    alert("Input from the keyboard");

                //    this.value = '';
                //}

                //else {
                //    //debugger;
                //    //alert("Scanner Input");
                //    inputType = "scanner";
                //}

                //if (inputType === "keyboard") {
                //    debugger;
                //    document.onkeydown = function (e) {
                //        return false;
                //    }
                //}

                //debugger;
                //document.onkeydown = function (e) { return true; }
                //if (ev.key !== "Shift") {
                //    debugger;
                //    document.onkeydown = function (e) {
                //        return false;
                //    }
                //}
                //else {
                //    debugger;
                //    document.onkeydown = function (e) { return true;}
                //}
            })


            // bind an event listener to the keydown event on the window
            //window.addEventListener('keydown', function (event) {
            //    //debugger
            //    // if the keyCode is 16 ( shift key was pressed )
            //    if (event.keyCode === 16) {

            //        // prevent default behaviour
            //        event.preventDefault();

            //        return false;
            //    }
                //debugger;
                //var e = e || event;

                //if (e.shiftKey === true) {
                //    return true;
                //}


            //});



        });
    </script>



</body>

</html>