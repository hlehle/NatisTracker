@model NatisTracker.ViewModels.DeliveryViewModel
@{
    ViewBag.Title = "OriginationView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Sign in &middot; Leave Management System</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="">
    <meta name="author" content="">

    <style type="text/css">
        table {
            font-family: arial, sans-serif;
            border-collapse: collapse;
            width: 100%;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #dddddd;
        }

        .container {
            height: 100%;
            padding: 5px 5px 5px 5px;
            margin-left: 1%;
            margin-right: 1%;
            width: 98%;
        }
    </style>

</head>
<body>
    <ul class="nav nav-tabs nav-pills" data-tabs="tabs" id="myTab">
        <li class="active" id="CourierTab"><a data-toggle="tab" href="#Courier">Sent By Courier</a></li>
        <li id="DriverTab"><a data-toggle="tab" href="#Driver">Sent By Driver</a></li>
    </ul>

    <div class="container">
        <div class="tab-content">
            
            <div id="Courier" class="tab-pane fade in active">
                @using (Html.BeginForm("OriginationView", "Users", FormMethod.Post))
                {
                    <div class="table-responsive table table-striped">
                        <h3>Sent By Courier</h3>

                        <br /><br />
                        @if (Model.CourierViewModel != null)
                        {
                            <table id="CourierTable" class="table-responsive">
                                <thead>
                                    <tr>
                                        <th>Dealership Name</th>
                                        <th>Contract Numbers</th>
                                        <th>Waybill Number</th>
                                        <th>Item Sent</th>
                                        <th>Package Sender</th>
                                        <th>Date Sent</th>
                                        <th>Delivery Status</th>
                                        <th>Comment</th>
                                        <th>Reply</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @for (int i = 0; i < Model.CourierViewModel.DeliveryItems.Count; i++)
                                {
                                    var delivery = Model.CourierViewModel.DeliveryItems[i];
                                    @Html.HiddenFor(a => delivery.Recipient, "Recipient")
                                    @Html.HiddenFor(a => delivery.RecipientEmail, "RecipientEmail")
                                    @Html.HiddenFor(a => delivery.RecipientContacts, "RecipientContacts")

                                    <tr>
                                        <td>@delivery.DealershipName</td>
                                        <td>
                                            @for (int j = 0; j < Model.CourierViewModel.DeliveryItems[i].ContractNumberItems.Count; j++)
                                            {
                                                @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].RecordNumber)
                                                @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].DealershipName)
                                                @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].DeliveryChoice)
                                                @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].Quantity)

                                                <div class="checkbox">
                                                    @Html.CheckBoxFor(a => Model.CourierViewModel.DeliveryItems[i].ContractNumberItems[j].IsRecieved)
                                                    @Model.CourierViewModel.DeliveryItems[i].ContractNumberItems[j].ContractNumber<br />
                                                    @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].ContractNumberItems[j].ContractNumber)
                                                    @Html.HiddenFor(a => Model.CourierViewModel.DeliveryItems[i].ContractNumberItems[j].RecordNumber)
                                                </div>
                                            }
                                        </td>
                                        <td>@delivery.WaybillNumber</td>
                                        <td>@delivery.Quantity</td>
                                        <td>@delivery.PackageSender</td>
                                        <td>@delivery.DateSent</td>
                                        <td>@delivery.DeliveryStatus</td>
                                        <td>@delivery.Comment</td>
                                        <td>
                                            <div class="form-group">
                                                @Html.AntiForgeryToken()
                                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                    

                                                @Html.DropDownListFor(a => a.CourierViewModel.DeliveryItems[i].DeliveryStatus, new List<SelectListItem>
                                                {
                                                    new SelectListItem { Text="Received", Value = "Received"},
                                                    new SelectListItem { Text="Not Received", Value = "Not Received"},
                                                },"Reply", new { @class= "col-md-8" })
                                                <span class="col-md-2">@Html.ValidationMessageFor(model => model.CourierViewModel.DeliveryItems[i].DeliveryStatus, "", new { @class = "text-danger" })</span>
                                            </div>

                                        </td>
                                    </tr>
                                }
                                    </tbody>
                            </table>
                        }

                    </div>
                    <br /><br />

                    <button class="btn btn-large btn-primary" type="submit" id="CourierBtn">Submit</button>
                }
            </div>

            <div id="Driver" class="tab-pane fade in">
                @using (Html.BeginForm("OriginationView", "Users", FormMethod.Post))
                {
                    <div class="table-responsive table table-striped">
                        <h3>Sent By Driver</h3>

                        <br /><br />
                        @if (Model.DriverViewModel != null)
                        {
                            <table id="DriverTable" class="table-responsive">
                                <thead>
                                    <tr>
                                        <th>Dealership Name</th>
                                        <th>Contract Numbers</th>
                                        <th>Drivers Details</th>
                                        <th>Drivers Contacts</th>
                                        <th>Item Sent</th>
                                        <th>Package Sender</th>
                                        <th>Date Sent</th>
                                        <th>Delivery Status</th>
                                        <th>Comment</th>
                                        <th>Reply</th>
                                    </tr>
                                </thead>
                                <tbody>
                                @for (int i = 0; i < Model.DriverViewModel.DeliveryItems.Count; i++)
                                {
                                    var delivery = Model.DriverViewModel.DeliveryItems[i];
                                    @Html.HiddenFor(a => delivery.Recipient, "Recipient")
                                    @Html.HiddenFor(a => delivery.RecipientEmail, "RecipientEmail")
                                    @Html.HiddenFor(a => delivery.RecipientContacts, "RecipientContacts")
                                        <tr>
                                            <td>@delivery.DealershipName</td>
                                            <td>
                                                @for (int j = 0; j < Model.DriverViewModel.DeliveryItems[i].ContractNumberItems.Count; j++)
                                                {
                                                    @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].RecordNumber)
                                                    @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].DealershipName)
                                                    @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].DeliveryChoice)
                                                    @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].Quantity)

                                                    <div class="checkbox">
                                                        @Html.CheckBoxFor(a => Model.DriverViewModel.DeliveryItems[i].ContractNumberItems[j].IsRecieved)
                                                        @Model.DriverViewModel.DeliveryItems[i].ContractNumberItems[j].ContractNumber<br />
                                                        @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].ContractNumberItems[j].ContractNumber)
                                                        @Html.HiddenFor(a => Model.DriverViewModel.DeliveryItems[i].ContractNumberItems[j].RecordNumber)
                                                    </div>

                                                }
                                            </td>
                                            <td>@delivery.DriverDetails</td>
                                            <td>@delivery.DriverContacts</td>
                                            <td>@delivery.Quantity</td>
                                            <td>@delivery.PackageSender</td>
                                            <td>@delivery.DateSent</td>
                                            <td>@delivery.DeliveryStatus</td>
                                            <td>@delivery.Comment</td>
                                            <td>
                                                <div class="form-group">
                                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                                    @Html.AntiForgeryToken()

                                                    @Html.DropDownListFor(a => a.DriverViewModel.DeliveryItems[i].DeliveryStatus, new List<SelectListItem>
                                                    {
                                                        new SelectListItem { Text="Received", Value = "Received"},
                                                        new SelectListItem { Text="Not Received", Value = "Not Received"},
                                                    },"Reply", new { @class="col-md-10"})
                                                    <span class="col-md-2">@Html.ValidationMessageFor(model => model.DriverViewModel.DeliveryItems[i].DeliveryStatus, "", new { @class = "text-danger" })</span>
                                                </div>
                                                

                                            </td>
                                        </tr>
                                }
                                </tbody>
                            </table>
                        }

                    </div>
                    <br /><br />

                    <button class="btn btn-large btn-primary" type="submit" id="DriverBtn">Submit</button>
                }
            </div>

        </div>
    </div>

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.min.js"></script>

    <script type="text/javascript" class="init">
        $(document).ready(function () {
            $('#CourierTable').DataTable();
            $('#DriverTable').DataTable();

            $("#DriverBtn").click(function () {
                debugger;
                $("#CourierTab").removeClass("active");  // this deactivates the home tab
                $("#DriverTab").addClass("active");  // this activates the profile tab
            });

            $("#CourierBtn").click(function () {
                debugger;
                $("#DriverTab").removeClass("active");  // this deactivates the home tab
                $("#CourierTab").addClass("active");  // this activates the profile tab
            }); 
        });

    </script>

</body>
</html>
